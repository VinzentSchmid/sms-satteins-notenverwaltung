name: Get the latest version of the database

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate version number
        id: versioning
        run: echo "VERSION=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.SECRET_GITHUB_TOKEN }}

      - name: Pull the latest image
        run: docker pull ghcr.io/vinzentschmid/sms-satteins-notenverwaltung/postgres:alpine

      - name: Tag the image with the new version
        run: docker tag ghcr.io/vinzentschmid/sms-satteins-notenverwaltung/postgres:alpine ghcr.io/vinzentschmid/sms-satteins-notenverwaltung/postgres:$VERSION

      - name: Push the image to GitHub Packages
        run: docker push ghcr.io/vinzentschmid/sms-satteins-notenverwaltung/postgres:$VERSION

      - name: Start the database container
        run: docker run --name db -d ghcr.io/vinzentschmid/sms-satteins-notenverwaltung/postgres:alpine

      - name: Wait for database to be ready
        run: sleep 10 # Warten Sie einige Sekunden, um dem Container Zeit zum Starten zu geben

      - name: Create SQL backup
        run: docker exec db pg_dump -U postgres postgres > ./backupDatabase/backup_$VERSION.sql

